name: CI

on: 
  push:
    branches:
      - main
      - release/**

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - release/**

jobs:
  build:
    name: Build
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: dotnet/nbgv@f088059084cb5d872e9d1a994433ca6440c2bf72 # v0.4.2
      with:
        toolVersion: 3.6.139
        setAllVars: true

    - name: Build
      run: |
        cd src
        dotnet build -c Release -p:PackageVersion=$env:NBGV_SemVer2 -p:Version=$env:NBGV_SemVer2 "-p:InformationalVersion=$env:NBGV_SemVer2+$env:NBGV_BuildingRef" "/p:PackageOutputPath=$env:GITHUB_WORKSPACE\artifacts" 

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NuGet
        path: .\artifacts

  sign:
    name: Sign Package
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')) }}
    runs-on: windows-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: NuGet
          path: artifacts\NuGet

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup SignClient
        run: |
          dotnet tool install --tool-path build SignClient

      - name: SignClient
        shell: pwsh
        run: |
          build\SignClient sign -i artifacts\NuGet\*.nupkg -c build\SignClient.json -r "${{ secrets.UNO_PLATFORM_CODESIGN_USERNAME }}" -s "${{ secrets.UNO_PLATFORM_CODESIGN_SECRET }}" -n "Uno.Devtools.Telemetry" -d "Uno.Devtools.Telemetry" -u "https://github.com/unoplatform/uno.check"

      - name: Upload Signed Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NuGet-Signed
          path: .\artifacts\NuGet

  publish_dev:
    name: Publish Dev
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: windows-latest
    environment: Development

    needs:
      - sign

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: NuGet-Signed
          path: artifacts

      - name: NuGet Push
        shell: pwsh
        run: |
          dotnet nuget push artifacts\*.nupkg -s https://api.nuget.org/v3/index.json -k "${{ secrets.NUGET_ORG_API_KEY }}"

  publish_prod:
    name: Publish Production
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/') }}
    runs-on: windows-latest
    environment: Production

    needs:
      - sign

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: NuGet-Signed
          path: artifacts

      - name: NuGet Push
        shell: pwsh
        run: |
          dotnet nuget push artifacts\*.nupkg -s https://api.nuget.org/v3/index.json -k "${{ secrets.NUGET_ORG_API_KEY }}"